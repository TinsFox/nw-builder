import{_ as t,o,c as s,Q as e}from"./chunks/framework.76114955.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"mode-get.md","filePath":"mode-get.md"}'),a={name:"mode-get.md"},n=e(`<h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><dl><dt><a href="#get">get(options)</a> ⇒ <code>Promise.&lt;void&gt;</code></dt><dd><p>Get binaries.</p><p><em>Note: This an internal function which is not called directly. Please see example usage below.</em></p></dd><dt><a href="#getNwjs">getNwjs(options)</a> ⇒ <code>Promise.&lt;void&gt;</code></dt><dd><p>Get NW.js binaries</p></dd><dt><a href="#getFfmpeg">getFfmpeg(options)</a> ⇒ <code>Promise.&lt;void&gt;</code></dt><dd><p>Get FFmpeg binary.</p></dd><dt><a href="#getNodeHeaders">getNodeHeaders(options)</a> ⇒ <code>Promise.&lt;void&gt;</code></dt><dd><p>Get Node headers</p></dd></dl><p><a name="get"></a></p><h2 id="get-options-⇒-promise-void" tabindex="-1">get(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#get-options-⇒-promise-void" aria-label="Permalink to &quot;get(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p>Get binaries.</p><p><em>Note: This an internal function which is not called directly. Please see example usage below.</em></p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td>Get mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.flavor</td><td><code>&quot;normal&quot;</code> | <code>&quot;sdk&quot;</code></td><td>NW.js build flavor. Defaults to &quot;normal&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.downloadUrl</td><td><code>string</code></td><td>File server to download from. Defaults to &quot;<a href="https://dl.nwjs.io" target="_blank" rel="noreferrer">https://dl.nwjs.io</a>&quot;. Set &quot;<a href="https://npm.taobao.org/mirrors/nwjs" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/nwjs</a>&quot; for China mirror or &quot;<a href="https://cnpmjs.org/mirrors/nwjs/" target="_blank" rel="noreferrer">https://cnpmjs.org/mirrors/nwjs/</a>&quot; for Singapore mirror.</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.cache</td><td><code>boolean</code></td><td>If false, remove cache before download. Defaults to true.</td></tr><tr><td>options.ffmpeg</td><td><code>boolean</code></td><td>If true, ffmpeg is not downloaded. Defaults to false.</td></tr><tr><td>options.nativeAddon</td><td><code>false</code> | <code>&quot;gyp&quot;</code></td><td>Rebuilds native modules. Defaults to false.</td></tr></tbody></table><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Minimal Usage (uses default values)</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Minimal Usage (uses default values)</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Unofficial macOS builds (upto v0.75.0)</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  platform: </span><span style="color:#9ECBFF;">&quot;osx&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  arch: </span><span style="color:#9ECBFF;">&quot;arm64&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  downloadUrl: </span><span style="color:#9ECBFF;">&quot;https://github.com/corwin-of-amber/nw.js/releases/download&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  manifestUrl: </span><span style="color:#9ECBFF;">&quot;https://raw.githubusercontent.com/nwutils/nw-builder/main/src/util/osx.arm.versions.json&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Unofficial macOS builds (upto v0.75.0)</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  platform: </span><span style="color:#032F62;">&quot;osx&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  arch: </span><span style="color:#032F62;">&quot;arm64&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  downloadUrl: </span><span style="color:#032F62;">&quot;https://github.com/corwin-of-amber/nw.js/releases/download&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  manifestUrl: </span><span style="color:#032F62;">&quot;https://raw.githubusercontent.com/nwutils/nw-builder/main/src/util/osx.arm.versions.json&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// China mirror</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;"> mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;"> downloadUrl: </span><span style="color:#9ECBFF;">&quot;https://npm.taobao.org/mirrors/nwjs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// China mirror</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;"> mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> downloadUrl: </span><span style="color:#032F62;">&quot;https://npm.taobao.org/mirrors/nwjs&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Singapore mirror</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;"> mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;"> downloadUrl: </span><span style="color:#9ECBFF;">&quot;https://cnpmjs.org/mirrors/nwjs/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Singapore mirror</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;"> mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> downloadUrl: </span><span style="color:#032F62;">&quot;https://cnpmjs.org/mirrors/nwjs/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// FFMPEG (proprietary codecs)</span></span>
<span class="line"><span style="color:#6A737D;">// Please read the license&#39;s constraints: https://nwjs.readthedocs.io/en/latest/For%20Developers/Enable%20Proprietary%20Codecs/#get-ffmpeg-binaries-from-the-community</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ffmpeg: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// FFMPEG (proprietary codecs)</span></span>
<span class="line"><span style="color:#6A737D;">// Please read the license&#39;s constraints: https://nwjs.readthedocs.io/en/latest/For%20Developers/Enable%20Proprietary%20Codecs/#get-ffmpeg-binaries-from-the-community</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ffmpeg: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Node headers</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  nativeAddon: </span><span style="color:#9ECBFF;">&quot;gyp&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Node headers</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  nativeAddon: </span><span style="color:#032F62;">&quot;gyp&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><a name="getNwjs"></a></p><h2 id="getnwjs-options-⇒-promise-void" tabindex="-1">getNwjs(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#getnwjs-options-⇒-promise-void" aria-label="Permalink to &quot;getNwjs(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p>Get NW.js binaries</p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td>Get mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.flavor</td><td><code>&quot;normal&quot;</code> | <code>&quot;sdk&quot;</code></td><td>NW.js build flavor. Defaults to &quot;normal&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.downloadUrl</td><td><code>string</code></td><td>File server to download from. Defaults to &quot;<a href="https://dl.nwjs.io" target="_blank" rel="noreferrer">https://dl.nwjs.io</a>&quot;. Set &quot;<a href="https://npm.taobao.org/mirrors/nwjs" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/nwjs</a>&quot; for China mirror or &quot;<a href="https://cnpmjs.org/mirrors/nwjs/" target="_blank" rel="noreferrer">https://cnpmjs.org/mirrors/nwjs/</a>&quot; for Singapore mirror.</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.cache</td><td><code>boolean</code></td><td>If false, remove cache before download. Defaults to true.</td></tr></tbody></table><p><a name="getFfmpeg"></a></p><h2 id="getffmpeg-options-⇒-promise-void" tabindex="-1">getFfmpeg(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#getffmpeg-options-⇒-promise-void" aria-label="Permalink to &quot;getFfmpeg(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p>Get FFmpeg binary.</p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td>Get mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.flavor</td><td><code>&quot;normal&quot;</code> | <code>&quot;sdk&quot;</code></td><td>NW.js build flavor. Defaults to &quot;normal&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.cache</td><td><code>boolean</code></td><td>If false, remove cache before download. Defaults to true.</td></tr></tbody></table><p><a name="getNodeHeaders"></a></p><h2 id="getnodeheaders-options-⇒-promise-void" tabindex="-1">getNodeHeaders(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#getnodeheaders-options-⇒-promise-void" aria-label="Permalink to &quot;getNodeHeaders(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p>Get Node headers</p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td>Get mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.cache</td><td><code>string</code></td><td>If false, remove cache before download. Defaults to true.</td></tr></tbody></table>`,35),l=[n];function p(r,d,c,i,u,h){return o(),s("div",null,l)}const E=t(a,[["render",p]]);export{m as __pageData,E as default};
