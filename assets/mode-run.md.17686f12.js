import{_ as t,o,c as e,Q as s}from"./chunks/framework.b4de87cf.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"mode-run.md","filePath":"mode-run.md"}'),a={name:"mode-run.md"},n=s(`<p><a name="run"></a></p><h2 id="run-options-⇒-promise-void" tabindex="-1">run(options) ⇒ <code>Promise.&lt;void&gt;</code> <a class="header-anchor" href="#run-options-⇒-promise-void" aria-label="Permalink to &quot;run(options) ⇒ &lt;code&gt;Promise.&amp;lt;void&amp;gt;&lt;/code&gt;&quot;">​</a></h2><p><em>Note: This an internal function which is not called directly. Please see example usage below.</em></p><p>Run NW.js application. You can use get mode options in run mode too.</p><p><strong>Kind</strong>: global function</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>options</code></td><td>Run mode options</td></tr><tr><td>options.version</td><td><code>string</code></td><td>NW.js runtime version. Defaults to &quot;latest&quot;.</td></tr><tr><td>options.flavor</td><td><code>&quot;normal&quot;</code> | <code>&quot;sdk&quot;</code></td><td>NW.js build flavor. Defaults to &quot;normal&quot;.</td></tr><tr><td>options.platform</td><td><code>&quot;linux&quot;</code> | <code>&quot;osx&quot;</code> | <code>&quot;win&quot;</code></td><td>Target platform. Defaults to host platform.</td></tr><tr><td>options.arch</td><td><code>&quot;ia32&quot;</code> | <code>&quot;x64&quot;</code> | <code>&quot;arm64&quot;</code></td><td>Target architecture. Defaults to host architecture.</td></tr><tr><td>options.srcDir</td><td><code>string</code></td><td>Source directory path. Defaults to &quot;./src&quot;</td></tr><tr><td>options.cacheDir</td><td><code>string</code></td><td>Cache directory path. Defaults to &quot;./cache&quot;</td></tr><tr><td>options.glob</td><td><code>boolean</code></td><td>If true, file globbing is enabled. Defaults to false.</td></tr><tr><td>options.argv</td><td><code>Array.&lt;string&gt;</code></td><td>Arguments to pass to NW.js. Defaults to []. See <a href="https://docs.nwjs.io/en/latest/References/Command%20Line%20Options/#command-line-options" target="_blank" rel="noreferrer">NW.js CLI options</a> for more information.</td></tr></tbody></table><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Minimal Usage (uses default values)</span></span>
<span class="line"><span style="color:#B392F0;">nwbuild</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;run&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Minimal Usage (uses default values)</span></span>
<span class="line"><span style="color:#6F42C1;">nwbuild</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;run&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>`,8),d=[n];function r(l,c,p,i,u,m){return o(),e("div",null,d)}const g=t(a,[["render",r]]);export{f as __pageData,g as default};
